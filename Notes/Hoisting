Hoisting

In JavaScript, a variable can be declared after it has been used.
In other words; a variable can be used before it has been declared.

Hoisting is JavaScript's default behavior of moving all declarations 
to the top of the current scope (to the top of the current script or 
the current function).

Hoisting is (to many developers) an unknown or overlooked behavior of JavaScript.
If a developer doesn't understand hoisting, programs may contain bugs (errors).
To avoid bugs, always declare all variables at the beginning of every scope.
Since this is how JavaScript interprets the code, it is always a good rule. 

Keep in mind that JavaScript in strict mode does not allow variables to be 
used if they are not declared.
